# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

type CallByEra @entity {
  id: ID! # era_contract
  contractAddress: String! @index
  era: BigInt! @index
  numberOfCalls: BigInt!
  activeUsers: [String]!
  uniqueActiveUsers: BigInt!
  timestamp: BigInt,
  startBlock: Int
  endBlock: Int
}

type StakingEvent @entity {
  id: ID!
  userAddress: String! @index
  transaction: UserTransactionType!
  contractAddress: String
  amount: BigInt!
  timestamp: BigInt! @index
  blockNumber: BigInt!
}

enum UserTransactionType {
  BondAndStake,
  UnbondAndUnstake,
  Withdraw,
  WithdrawFromUnregistered,
  NominationTransfer
}

type Era @entity {
  id: ID! #Era number
  block: BigInt!
  timestamp: BigInt!
}

type Contract @entity {
  id: ID! #Contrat address
  registrationEra: BigInt!
  registrationBlock: BigInt!
  registrationTimestamp: BigInt!
  unregistrationEra: BigInt
  unregistrationTimestamp: BigInt
  unregistrationBlock: BigInt
}

type UserTransaction @entity {
  id: ID!
  userAddress: String! @index
  transaction: UserTransactionType!
  transactionHash: String!
  transactionSuccess: Boolean!
  contractAddress: String
  amount: BigInt
  timestamp: BigInt! @index
  blockNumber: BigInt!
}

